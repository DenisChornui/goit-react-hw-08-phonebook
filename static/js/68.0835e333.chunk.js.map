{"version":3,"file":"static/js/68.0835e333.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  max-width: 250px;\n  margin-bottom: 30px;\n  font-weight: 300;\n  margin-right: auto;\n  margin-left: auto;\n`;\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  row-gap: 5px;\n  font-weight: 400;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 10px;\n  min-width: 100px;\n  min-height: 40px;\n  border: 1px solid black;\n  border-radius: 8px;\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: blue;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  border: 0.1px solid lightgray;\n  font-size: 18px;\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 3px 2px lightblue;\n  }\n`;\n\nexport const StyledErrMessage = styled(ErrorMessage)`\n  color: red;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contact.contacts;\n\nexport const selectStatusFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contact.isLoading;\n\nexport const selectError = state => state.contact.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledBtn,\n  StyledErrMessage,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst contactFormSchema = Yup.object().shape({\n  name: Yup.string().required('This field is required!'),\n  number: Yup.string()\n    .matches(/^[0-9-+]+$/, 'Please enter digits, \"-\" or \"+\"')\n    .required('This field is required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactFormSchema}\n      onSubmit={(values, actions) => {\n        if (\n          contacts.some(\n            contact => contact.name.toLowerCase() === values.name.toLowerCase()\n          )\n        ) {\n          return alert(`${values.name} is already in contacts`);\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <StyledLabel>\n          Name\n          <StyledField name=\"name\" />\n          <StyledErrMessage name=\"name\" component=\"div\" />\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledField type=\"tel\" name=\"number\" required />\n          <StyledErrMessage name=\"number\" component=\"div\" />\n        </StyledLabel>\n\n        <StyledBtn type=\"submit\">Add contact</StyledBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  width: 300px;\n`;\n\nexport const StyledBtn = styled.button`\n  min-height: 25px;\n  border: 1px solid black;\n  border-radius: 8px;\n  color: black;\n  float: right;\n  font-weight: bold;\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n  transition: background-color 0.5s;\n  &:hover {\n    background-color: blue;\n  }\n`;\n","import { StyledList, StyledBtn } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contactsFilter = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledList>\n      {isLoading && <b>Loading....</b>}\n      {error && <b>Some Error</b>}\n      {contactsFilter.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <li key={id}>\n            {name}: {number}\n            <StyledBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </StyledBtn>\n          </li>\n        );\n      })}\n    </StyledList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTitle = styled.p`\n  font-size: 18px;\n  font-weight: 400;\n  margin-bottom: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  border: 0.1px solid lightgray;\n  font-size: 20px;\n  &:focus {\n    outline: none;\n    box-shadow: 0px 0px 3px 2px lightblue;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { StyledInput, StyledTitle } from './Filter.styled';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contactFilter = evt => dispatch(setFilter(evt.target.value));\n\n  return (\n    <div>\n      <StyledTitle>Find contacts by name</StyledTitle>\n      <StyledInput\n        type=\"string\"\n        name=\"filter\"\n        onChange={contactFilter}\n      ></StyledInput>\n    </div>\n  );\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default function Contacts() {\n  return (\n    <div>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n    </div>\n  );\n}\n\n"],"names":["StyledForm","styled","Form","StyledLabel","StyledBtn","StyledField","Field","StyledErrMessage","ErrorMessage","selectContacts","state","contact","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","name","toLowerCase","includes","contactFormSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","actions","some","alert","addContact","resetForm","component","type","StyledList","ContactList","contactsFilter","useEffect","fetchContacts","map","id","onClick","deleteContact","StyledTitle","StyledInput","Filter","onChange","evt","setFilter","target","value","Contacts"],"sourceRoot":""}